ツイキャスのデータ取得方法

コメントテキスト
const commenttext= document.querySelectorAll(".tw-textarea");

コメント投稿ボタン
const commentbtn = document.querySelectorAll(".tw-comment-post-operations > .tw-button-primary");

配信開始テキストボックス
const casttext = document.querySelectorAll(".message-textarea");

配信開始ボタン
const castbtn = document.querySelectorAll(".broadcast-notification-dialog .tw-button-primary");

投稿画面に挟むHTML(コメント)
.tw-comment-post-operations-secondary直下の最初に挟むか .tw-comment-post-operations-secondaryの中にある.tw-popup-menu-trapの直後におく
const commenthtml = "<span class="twicaskey-commentcheck"><input type="checkbox" name="misspost" id="misspost" checked=""><label for="misspost">Misskeyにも投稿</label></span>";

投稿画面に挟むHTML(配信開始)
.modal-body直下の最後に配置すること
const casthtml = "<span class="twicaskey-castcheck"><input type="checkbox" name="misscast" id="misscast" checked=""><label for="misscast">Misskeyにも投稿</label></span>";



url取得方法
本来は配信IDを取得するのが望ましいが難しそうなので一旦暫定で現在のURLが取れれば問題なさそう
https://twitcasting.tv/hypersyntaxstar
document.hrefで取得してreplaceで"/broadcaster"を削除する



流れ
・DOM読み込み後に以下の要素を取得
・misskeyにも投稿のチェックボックスを作成する
・チェックボックスは以前の状態を保存して呼び出すことにする or 情報がなければ未チェックにする
・投稿ボタンが押されたときにイベントリスナーを設定する
（
今のユーザーにおけるインスタンス名とAPIトークンは保存済み？
保存済み
→ テキストボックスのデータを取得
→これをもとにAPIを相手に投げる
→レスポンスが200ならOKモーダル、ちがければ失敗モーダルを表示

まだ保存してない
→　情報がないので投稿できない胸を表示
）

・さらにチェックボックスにもイベントリスナーを設定する
押されたら（
トークン登録済み？
登録済み
→なにもしない

登録してない
→情報入力を求めるモーダルを表示
→チェックを空にする
）

そのほか
・キャスのデフォルト動作でテキストボックスが削除されないか？　もしくはこっちでイベントリスナー設定したら規定の動作が動かなくならないか？
・複数ユーザでログインすることを一応考えて現在のユーザー名で分離してトークン情報を持っておくべきな気がする
・インスタンス名で保存する？URLで保存する？（インスタンス名だけだと理解していない人がwwwつけ忘れて動かないインスタンスがありそう）